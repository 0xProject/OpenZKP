Constraint expression for hash_pool/hash/ec_subset_sum/booleanity_test: hash_pool__hash__ec_subset_sum__bit * (hash_pool__hash__ec_subset_sum__bit - 1).
Numerator: point^(trace_length / 1024) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 4) - 1
Constraint expression for hash_pool/hash/ec_subset_sum/bit_extraction_end: column8_row3.
Numerator: 1
Denominator: point^(trace_length / 1024) - trace_generator^(251 * trace_length / 256)
Constraint expression for hash_pool/hash/ec_subset_sum/zeros_tail: column8_row3.
Numerator: 1
Denominator: point^(trace_length / 1024) - trace_generator^(255 * trace_length / 256)
Constraint expression for hash_pool/hash/ec_subset_sum/add_points/slope: hash_pool__hash__ec_subset_sum__bit * (column8_row2 - hash_pool_points__y) - column8_row1 * (column8_row0 - hash_pool_points__x).
Numerator: point^(trace_length / 1024) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 4) - 1
Constraint expression for hash_pool/hash/ec_subset_sum/add_points/x: column8_row1 * column8_row1 - hash_pool__hash__ec_subset_sum__bit * (column8_row0 + hash_pool_points__x + column8_row4).
Numerator: point^(trace_length / 1024) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 4) - 1
Constraint expression for hash_pool/hash/ec_subset_sum/add_points/y: hash_pool__hash__ec_subset_sum__bit * (column8_row2 + column8_row6) - column8_row1 * (column8_row0 - column8_row4).
Numerator: point^(trace_length / 1024) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 4) - 1
Constraint expression for hash_pool/hash/ec_subset_sum/copy_point/x: hash_pool__hash__ec_subset_sum__bit_neg * (column8_row4 - column8_row0).
Numerator: point^(trace_length / 1024) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 4) - 1
Constraint expression for hash_pool/hash/ec_subset_sum/copy_point/y: hash_pool__hash__ec_subset_sum__bit_neg * (column8_row6 - column8_row2).
Numerator: point^(trace_length / 1024) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 4) - 1
Constraint expression for hash_pool/hash/copy_point/x: column8_row1024 - column8_row1020.
Numerator: point^(trace_length / 2048) - trace_generator^(trace_length / 2)
Denominator: point^(trace_length / 1024) - 1
Constraint expression for hash_pool/hash/copy_point/y: column8_row1026 - column8_row1022.
Numerator: point^(trace_length / 2048) - trace_generator^(trace_length / 2)
Denominator: point^(trace_length / 1024) - 1
Constraint expression for hash_pool/hash/init/x: column8_row0 - shift_point.x.
Numerator: 1
Denominator: point^(trace_length / 2048) - 1
Constraint expression for hash_pool/hash/init/y: column8_row2 - shift_point.y.
Numerator: 1
Denominator: point^(trace_length / 2048) - 1
Constraint expression for hash_pool/output_to_input: column8_row2044 - column8_row2051.
Numerator: 1
Denominator: point^(trace_length / 4096) - 1
Constraint expression for state_transition/merkle_update/side_bit_extraction/bit: state_transition__merkle_update__side_bit_extraction__bit_0 * state_transition__merkle_update__side_bit_extraction__bit_0 - state_transition__merkle_update__side_bit_extraction__bit_0.
Numerator: point^(trace_length / 16384) - trace_generator^(31 * trace_length / 32)
Denominator: point^(trace_length / 512) - 1
Constraint expression for state_transition/merkle_update/side_bit_extraction/zero: column6_row255.
Numerator: 1
Denominator: point^(trace_length / 16384) - trace_generator^(path_length * trace_length / 32)
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/ec_subset_sum/booleanity_test: state_transition__merkle_update__prev_authentication__hashes__ec_subset_sum__bit * (state_transition__merkle_update__prev_authentication__hashes__ec_subset_sum__bit - 1).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/ec_subset_sum/bit_extraction_end: column3_row0.
Numerator: 1
Denominator: point^(trace_length / 256) - trace_generator^(251 * trace_length / 256)
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/ec_subset_sum/zeros_tail: column3_row0.
Numerator: 1
Denominator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/ec_subset_sum/add_points/slope: state_transition__merkle_update__prev_authentication__hashes__ec_subset_sum__bit * (column1_row0 - merkle_hash_points__y) - column2_row0 * (column0_row0 - merkle_hash_points__x).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/ec_subset_sum/add_points/x: column2_row0 * column2_row0 - state_transition__merkle_update__prev_authentication__hashes__ec_subset_sum__bit * (column0_row0 + merkle_hash_points__x + column0_row1).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/ec_subset_sum/add_points/y: state_transition__merkle_update__prev_authentication__hashes__ec_subset_sum__bit * (column1_row0 + column1_row1) - column2_row0 * (column0_row0 - column0_row1).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/ec_subset_sum/copy_point/x: state_transition__merkle_update__prev_authentication__hashes__ec_subset_sum__bit_neg * (column0_row1 - column0_row0).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/ec_subset_sum/copy_point/y: state_transition__merkle_update__prev_authentication__hashes__ec_subset_sum__bit_neg * (column1_row1 - column1_row0).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/copy_point/x: column0_row256 - column0_row255.
Numerator: point^(trace_length / 512) - trace_generator^(trace_length / 2)
Denominator: point^(trace_length / 256) - 1
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/copy_point/y: column1_row256 - column1_row255.
Numerator: point^(trace_length / 512) - trace_generator^(trace_length / 2)
Denominator: point^(trace_length / 256) - 1
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/init/x: column0_row0 - shift_point.x.
Numerator: 1
Denominator: point^(trace_length / 512) - 1
Constraint expression for state_transition/merkle_update/prev_authentication/hashes/init/y: column1_row0 - shift_point.y.
Numerator: 1
Denominator: point^(trace_length / 512) - 1
Constraint expression for state_transition/merkle_update/prev_authentication/copy_prev_to_left: (1 - state_transition__merkle_update__side_bit_extraction__bit_1) * (column0_row511 - column3_row512).
Numerator: (point^(trace_length / 16384) - trace_generator^(31 * trace_length / 32)) * (point^(trace_length / 16384) - trace_generator^(15 * trace_length / 16))
Denominator: point^(trace_length / 512) - 1
Constraint expression for state_transition/merkle_update/prev_authentication/copy_prev_to_right: state_transition__merkle_update__side_bit_extraction__bit_1 * (column0_row511 - column3_row768).
Numerator: (point^(trace_length / 16384) - trace_generator^(31 * trace_length / 32)) * (point^(trace_length / 16384) - trace_generator^(15 * trace_length / 16))
Denominator: point^(trace_length / 512) - 1
Constraint expression for state_transition/merkle_update/new_authentication/hashes/ec_subset_sum/booleanity_test: state_transition__merkle_update__new_authentication__hashes__ec_subset_sum__bit * (state_transition__merkle_update__new_authentication__hashes__ec_subset_sum__bit - 1).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/new_authentication/hashes/ec_subset_sum/bit_extraction_end: column7_row0.
Numerator: 1
Denominator: point^(trace_length / 256) - trace_generator^(251 * trace_length / 256)
Constraint expression for state_transition/merkle_update/new_authentication/hashes/ec_subset_sum/zeros_tail: column7_row0.
Numerator: 1
Denominator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Constraint expression for state_transition/merkle_update/new_authentication/hashes/ec_subset_sum/add_points/slope: state_transition__merkle_update__new_authentication__hashes__ec_subset_sum__bit * (column5_row0 - merkle_hash_points__y) - column6_row0 * (column4_row0 - merkle_hash_points__x).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/new_authentication/hashes/ec_subset_sum/add_points/x: column6_row0 * column6_row0 - state_transition__merkle_update__new_authentication__hashes__ec_subset_sum__bit * (column4_row0 + merkle_hash_points__x + column4_row1).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/new_authentication/hashes/ec_subset_sum/add_points/y: state_transition__merkle_update__new_authentication__hashes__ec_subset_sum__bit * (column5_row0 + column5_row1) - column6_row0 * (column4_row0 - column4_row1).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/new_authentication/hashes/ec_subset_sum/copy_point/x: state_transition__merkle_update__new_authentication__hashes__ec_subset_sum__bit_neg * (column4_row1 - column4_row0).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/new_authentication/hashes/ec_subset_sum/copy_point/y: state_transition__merkle_update__new_authentication__hashes__ec_subset_sum__bit_neg * (column5_row1 - column5_row0).
Numerator: point^(trace_length / 256) - trace_generator^(255 * trace_length / 256)
Denominator: point^trace_length - 1
Constraint expression for state_transition/merkle_update/new_authentication/hashes/copy_point/x: column4_row256 - column4_row255.
Numerator: point^(trace_length / 512) - trace_generator^(trace_length / 2)
Denominator: point^(trace_length / 256) - 1
Constraint expression for state_transition/merkle_update/new_authentication/hashes/copy_point/y: column5_row256 - column5_row255.
Numerator: point^(trace_length / 512) - trace_generator^(trace_length / 2)
Denominator: point^(trace_length / 256) - 1
Constraint expression for state_transition/merkle_update/new_authentication/hashes/init/x: column4_row0 - shift_point.x.
Numerator: 1
Denominator: point^(trace_length / 512) - 1
Constraint expression for state_transition/merkle_update/new_authentication/hashes/init/y: column5_row0 - shift_point.y.
Numerator: 1
Denominator: point^(trace_length / 512) - 1
Constraint expression for state_transition/merkle_update/new_authentication/copy_prev_to_left: (1 - state_transition__merkle_update__side_bit_extraction__bit_1) * (column4_row511 - column7_row512).
Numerator: (point^(trace_length / 16384) - trace_generator^(31 * trace_length / 32)) * (point^(trace_length / 16384) - trace_generator^(15 * trace_length / 16))
Denominator: point^(trace_length / 512) - 1
Constraint expression for state_transition/merkle_update/new_authentication/copy_prev_to_right: state_transition__merkle_update__side_bit_extraction__bit_1 * (column4_row511 - column7_row768).
Numerator: (point^(trace_length / 16384) - trace_generator^(31 * trace_length / 32)) * (point^(trace_length / 16384) - trace_generator^(15 * trace_length / 16))
Denominator: point^(trace_length / 512) - 1
Constraint expression for state_transition/merkle_update/same_siblings: state_transition__merkle_update__prev_authentication__sibling_0 - state_transition__merkle_update__new_authentication__sibling_0.
Numerator: point^(trace_length / 16384) - trace_generator^(31 * trace_length / 32)
Denominator: point^(trace_length / 512) - 1
Constraint expression for state_transition/merkle_set_prev_leaf: state_transition__merkle_update__prev_authentication__leaf_0 - column8_row4092.
Numerator: 1
Denominator: point^(trace_length / 16384) - 1
Constraint expression for state_transition/merkle_set_new_leaf: state_transition__merkle_update__new_authentication__leaf_0 - column8_row12284.
Numerator: 1
Denominator: point^(trace_length / 16384) - 1
Constraint expression for modification_boundary_key: is_modification * (column9_row16376 * boundary_base - boundary_key).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for modification_boundary_token: is_modification * (column9_row16360 * boundary_base - boundary_token).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for modification_boundary_amount0: is_modification * (column8_row3075 * boundary_base - boundary_amount0).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for modification_boundary_amount1: is_modification * (column8_row11267 * boundary_base - boundary_amount1).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for modification_boundary_vault_id: is_modification * (column6_row255 * boundary_base - boundary_vault_id).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for amounts_range_check/bit: amounts_range_check__bit_0 * amounts_range_check__bit_0 - amounts_range_check__bit_0.
Numerator: point^(trace_length / 8192) - trace_generator^(63 * trace_length / 64)
Denominator: point^(trace_length / 128) - 1
Constraint expression for amounts_range_check/zero: column9_row4.
Numerator: 1
Denominator: point^(trace_length / 8192) - trace_generator^(63 * trace_length / 64)
Constraint expression for total_token_a_not_changed: is_settlement * (column8_row3075 - column8_row11267 - (column8_row27651 - column8_row19459)).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for total_token_b_not_changed: is_settlement * (column8_row35843 - column8_row44035 - (column8_row60419 - column8_row52227)).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for diff_a_range_check_input: (column9_row4 - (column8_row3075 - column8_row11267)) * is_settlement.
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for diff_b_range_check_input: (column9_row32772 - (column8_row35843 - column8_row44035)) * is_settlement.
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for amounts_range_check_inputs: column9_row8196 - column8_row11267.
Numerator: 1
Denominator: point^(trace_length / 16384) - 1
Constraint expression for sig_verify/doubling_key/slope: sig_verify__doubling_key__x_squared + sig_verify__doubling_key__x_squared + sig_verify__doubling_key__x_squared + sig_config.alpha - (column9_row32 + column9_row32) * column9_row16.
Numerator: point^(trace_length / 16384) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 64) - 1
Constraint expression for sig_verify/doubling_key/x: column9_row16 * column9_row16 - (column9_row0 + column9_row0 + column9_row64).
Numerator: point^(trace_length / 16384) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 64) - 1
Constraint expression for sig_verify/doubling_key/y: column9_row32 + column9_row96 - column9_row16 * (column9_row0 - column9_row64).
Numerator: point^(trace_length / 16384) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 64) - 1
Constraint expression for sig_verify/exponentiate_generator/booleanity_test: sig_verify__exponentiate_generator__bit * (sig_verify__exponentiate_generator__bit - 1).
Numerator: point^(trace_length / 32768) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 128) - 1
Constraint expression for sig_verify/exponentiate_generator/bit_extraction_end: column9_row20.
Numerator: 1
Denominator: point^(trace_length / 32768) - trace_generator^(251 * trace_length / 256)
Constraint expression for sig_verify/exponentiate_generator/zeros_tail: column9_row20.
Numerator: 1
Denominator: point^(trace_length / 32768) - trace_generator^(255 * trace_length / 256)
Constraint expression for sig_verify/exponentiate_generator/add_points/slope: sig_verify__exponentiate_generator__bit * (column9_row36 - ecdsa_points__y) - column9_row100 * (column9_row68 - ecdsa_points__x).
Numerator: point^(trace_length / 32768) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 128) - 1
Constraint expression for sig_verify/exponentiate_generator/add_points/x: column9_row100 * column9_row100 - sig_verify__exponentiate_generator__bit * (column9_row68 + ecdsa_points__x + column9_row196).
Numerator: point^(trace_length / 32768) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 128) - 1
Constraint expression for sig_verify/exponentiate_generator/add_points/y: sig_verify__exponentiate_generator__bit * (column9_row36 + column9_row164) - column9_row100 * (column9_row68 - column9_row196).
Numerator: point^(trace_length / 32768) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 128) - 1
Constraint expression for sig_verify/exponentiate_generator/add_points/x_diff_inv: column9_row84 * (column9_row68 - ecdsa_points__x) - 1.
Numerator: point^(trace_length / 32768) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 128) - 1
Constraint expression for sig_verify/exponentiate_generator/copy_point/x: sig_verify__exponentiate_generator__bit_neg * (column9_row196 - column9_row68).
Numerator: point^(trace_length / 32768) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 128) - 1
Constraint expression for sig_verify/exponentiate_generator/copy_point/y: sig_verify__exponentiate_generator__bit_neg * (column9_row164 - column9_row36).
Numerator: point^(trace_length / 32768) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 128) - 1
Constraint expression for sig_verify/exponentiate_key/booleanity_test: sig_verify__exponentiate_key__bit * (sig_verify__exponentiate_key__bit - 1).
Numerator: point^(trace_length / 16384) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 64) - 1
Constraint expression for sig_verify/exponentiate_key/bit_extraction_end: column9_row24.
Numerator: 1
Denominator: point^(trace_length / 16384) - trace_generator^(251 * trace_length / 256)
Constraint expression for sig_verify/exponentiate_key/zeros_tail: column9_row24.
Numerator: 1
Denominator: point^(trace_length / 16384) - trace_generator^(255 * trace_length / 256)
Constraint expression for sig_verify/exponentiate_key/add_points/slope: sig_verify__exponentiate_key__bit * (column9_row8 - column9_row32) - column9_row40 * (column9_row48 - column9_row0).
Numerator: point^(trace_length / 16384) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 64) - 1
Constraint expression for sig_verify/exponentiate_key/add_points/x: column9_row40 * column9_row40 - sig_verify__exponentiate_key__bit * (column9_row48 + column9_row0 + column9_row112).
Numerator: point^(trace_length / 16384) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 64) - 1
Constraint expression for sig_verify/exponentiate_key/add_points/y: sig_verify__exponentiate_key__bit * (column9_row8 + column9_row72) - column9_row40 * (column9_row48 - column9_row112).
Numerator: point^(trace_length / 16384) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 64) - 1
Constraint expression for sig_verify/exponentiate_key/add_points/x_diff_inv: column9_row56 * (column9_row48 - column9_row0) - 1.
Numerator: point^(trace_length / 16384) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 64) - 1
Constraint expression for sig_verify/exponentiate_key/copy_point/x: sig_verify__exponentiate_key__bit_neg * (column9_row112 - column9_row48).
Numerator: point^(trace_length / 16384) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 64) - 1
Constraint expression for sig_verify/exponentiate_key/copy_point/y: sig_verify__exponentiate_key__bit_neg * (column9_row72 - column9_row8).
Numerator: point^(trace_length / 16384) - trace_generator^(255 * trace_length / 256)
Denominator: point^(trace_length / 64) - 1
Constraint expression for sig_verify/init_gen/x: column9_row68 - sig_config.shift_point.x.
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for sig_verify/init_gen/y: column9_row36 + sig_config.shift_point.y.
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for sig_verify/init_key/x: column9_row48 - sig_config.shift_point.x.
Numerator: 1
Denominator: point^(trace_length / 16384) - 1
Constraint expression for sig_verify/init_key/y: column9_row8 - sig_config.shift_point.y.
Numerator: 1
Denominator: point^(trace_length / 16384) - 1
Constraint expression for sig_verify/add_results/slope: column9_row32676 - column9_row16328 - column9_row32724 * (column9_row32708 - column9_row16368).
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for sig_verify/add_results/x: column9_row32724 * column9_row32724 - (column9_row32708 + column9_row16368 + column9_row16384).
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for sig_verify/add_results/y: column9_row32676 + column9_row16416 - column9_row32724 * (column9_row32708 - column9_row16384).
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for sig_verify/add_results/x_diff_inv: column9_row32740 * (column9_row32708 - column9_row16368) - 1.
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for sig_verify/extract_r/slope: column9_row32712 + sig_config.shift_point.y - column8_row3069 * (column9_row32752 - sig_config.shift_point.x).
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for sig_verify/extract_r/x: column8_row3069 * column8_row3069 - (column9_row32752 + sig_config.shift_point.x + column9_row24).
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for sig_verify/extract_r/x_diff_inv: column8_row19453 * (column9_row32752 - sig_config.shift_point.x) - 1.
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for sig_verify/z_nonzero: column9_row20 * column8_row11261 - 1.
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for sig_verify/r_and_w_nonzero: column9_row24 * column9_row16336 - 1.
Numerator: 1
Denominator: point^(trace_length / 16384) - 1
Constraint expression for sig_verify/q_on_curve/x_squared: column8_row27645 - column9_row0 * column9_row0.
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for sig_verify/q_on_curve/on_curve: column9_row32 * column9_row32 - (column9_row0 * column8_row27645 + sig_config.alpha * column9_row0 + sig_config.beta).
Numerator: 1
Denominator: point^(trace_length / 32768) - 1
Constraint expression for maker_sig_input_packed: is_settlement * (column8_row7171 - (((column6_row255 * vault_shift + column6_row49407) * amount_shift + column9_row4) * amount_shift + column9_row32772) * trade_shift).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for taker_sig_input_maker_hash: is_settlement * (column8_row36867 - column8_row8188).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for taker_sig_input_vault_a: is_settlement * (column8_row37891 - column6_row16639).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for taker_sig_input_vault_b: is_settlement * (column8_row39939 - column6_row33023).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for copy_signature_input_maker: is_settlement * (column8_row8188 - column9_row20).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for copy_signature_input_taker: is_settlement * (column8_row40956 - column9_row32788).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for handle_empty_vault/consistency_key_change0: is_settlement * (column9_row0 - column9_row16376).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for handle_empty_vault/consistency_token_change0: is_settlement * (column8_row4099 - column9_row16360).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for handle_empty_vault/consistency_key_change3: is_settlement * (column9_row0 - column9_row65528).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for handle_empty_vault/consistency_token_change3: is_settlement * (column8_row5123 - column9_row65512).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for handle_empty_vault/consistency_key_change1: is_settlement * (column9_row32768 - column9_row32760).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for handle_empty_vault/consistency_token_change1: is_settlement * (column8_row4099 - column9_row32744).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for handle_empty_vault/consistency_key_change2: is_settlement * (column9_row32768 - column9_row49144).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for handle_empty_vault/consistency_token_change2: is_settlement * (column8_row5123 - column9_row49128).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
Constraint expression for handle_empty_vault/vault_empty/empty_vault_booleanity: column8_row1021 * (1 - column8_row1021).
Numerator: 1
Denominator: point^(trace_length / 8192) - 1
Constraint expression for handle_empty_vault/vault_empty/amount_zero_when_empty: column8_row1021 * column8_row3075.
Numerator: 1
Denominator: point^(trace_length / 8192) - 1
Constraint expression for handle_empty_vault/vault_empty/amount_inv_zero_when_empty: column8_row1021 * column8_row5117.
Numerator: 1
Denominator: point^(trace_length / 8192) - 1
Constraint expression for handle_empty_vault/vault_empty/empty_when_amount_zero: column8_row3075 * column8_row5117 - (1 - column8_row1021).
Numerator: 1
Denominator: point^(trace_length / 8192) - 1
Constraint expression for handle_empty_vault/consistency_key_stage0: (1 - column8_row1021) * column9_row16376 - column8_row3.
Numerator: 1
Denominator: point^(trace_length / 16384) - 1
Constraint expression for handle_empty_vault/consistency_token_stage0: (1 - column8_row1021) * column9_row16360 - column8_row1027.
Numerator: 1
Denominator: point^(trace_length / 16384) - 1
Constraint expression for handle_empty_vault/consistency_key_stage1: (1 - column8_row9213) * column9_row16376 - column8_row8195.
Numerator: 1
Denominator: point^(trace_length / 16384) - 1
Constraint expression for handle_empty_vault/consistency_token_stage1: (1 - column8_row9213) * column9_row16360 - column8_row9219.
Numerator: 1
Denominator: point^(trace_length / 16384) - 1
Constraint expression for initial_root: column0_row_expr0 - initial_root.
Numerator: 1
Denominator: point - 1
Constraint expression for final_root: column4_row_expr1 - final_root.
Numerator: 1
Denominator: point - trace_generator^(65536 * (trace_length / 65536 - 1))
Constraint expression for copy_merkle_roots: column4_row_expr0 - column0_row_expr2.
Numerator: point - trace_generator^(65536 * (trace_length / 65536 - 1) + 49152)
Denominator: point^(trace_length / 16384) - 1
Constraint expression for copy_merkle_roots_modification: is_modification * (column4_row_expr0 - column4_row_expr1).
Numerator: 1
Denominator: point^(trace_length / 65536) - 1
