/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Contract, ContractTransaction, EventFilter, Signer} from 'ethers';
import {Listener, Provider} from 'ethers/providers';
import {Arrayish, BigNumber, BigNumberish, Interface} from 'ethers/utils';
import {TransactionOverrides, TypedEventDescription, TypedFunctionDescription} from '.';

interface FriInterface extends Interface {
    functions: {
        fold_and_check_fri_layers: TypedFunctionDescription<{
            encode([fri_data]: [
                {
                    fri_values: Arrayish[][];
                    fri_commitments: Arrayish[];
                    fri_decommitments: Arrayish[][];
                    fri_layout: BigNumberish[];
                    x_inv_vals: Arrayish[];
                    eval_points: Arrayish[];
                    log_eval_domain_size: BigNumberish;
                    queries: BigNumberish[];
                    polynomial_at_queries: Arrayish[];
                },
            ]): string;
        }>;
    };

    events: {};
}

export class Fri extends Contract {
    connect(signerOrProvider: Signer | Provider | string): Fri;
    attach(addressOrName: string): Fri;
    deployed(): Promise<Fri>;

    on(event: EventFilter | string, listener: Listener): Fri;
    once(event: EventFilter | string, listener: Listener): Fri;
    addListener(eventName: EventFilter | string, listener: Listener): Fri;
    removeAllListeners(eventName: EventFilter | string): Fri;
    removeListener(eventName: any, listener: Listener): Fri;

    interface: FriInterface;

    functions: {
        fold_and_check_fri_layers(
            fri_data: {
                fri_values: Arrayish[][];
                fri_commitments: Arrayish[];
                fri_decommitments: Arrayish[][];
                fri_layout: BigNumberish[];
                x_inv_vals: Arrayish[];
                eval_points: Arrayish[];
                log_eval_domain_size: BigNumberish;
                queries: BigNumberish[];
                polynomial_at_queries: Arrayish[];
            },
            overrides?: TransactionOverrides,
        ): Promise<ContractTransaction>;
    };

    fold_and_check_fri_layers(
        fri_data: {
            fri_values: Arrayish[][];
            fri_commitments: Arrayish[];
            fri_decommitments: Arrayish[][];
            fri_layout: BigNumberish[];
            x_inv_vals: Arrayish[];
            eval_points: Arrayish[];
            log_eval_domain_size: BigNumberish;
            queries: BigNumberish[];
            polynomial_at_queries: Arrayish[];
        },
        overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    filters: {};

    estimate: {
        fold_and_check_fri_layers(fri_data: {
            fri_values: Arrayish[][];
            fri_commitments: Arrayish[];
            fri_decommitments: Arrayish[][];
            fri_layout: BigNumberish[];
            x_inv_vals: Arrayish[];
            eval_points: Arrayish[];
            log_eval_domain_size: BigNumberish;
            queries: BigNumberish[];
            polynomial_at_queries: Arrayish[];
        }): Promise<BigNumber>;
    };
}
