/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Contract, ContractTransaction, EventFilter, Signer} from 'ethers';
import {Listener, Provider} from 'ethers/providers';
import {Arrayish, BigNumber, BigNumberish, Interface} from 'ethers/utils';
import {TransactionOverrides, TypedEventDescription, TypedFunctionDescription} from '.';

interface PrimeFieldTesterInterface extends Interface {
    functions: {
        fadd_external: TypedFunctionDescription<{
            encode([a, b]: [BigNumberish, BigNumberish]): string;
        }>;

        fmul_external: TypedFunctionDescription<{
            encode([a, b]: [BigNumberish, BigNumberish]): string;
        }>;

        fpow_external: TypedFunctionDescription<{
            encode([a, b]: [BigNumberish, BigNumberish]): string;
        }>;

        inverse_external: TypedFunctionDescription<{
            encode([a]: [BigNumberish]): string;
        }>;
    };

    events: {
        log_bytes32: TypedEventDescription<{
            encodeTopics([data]: [null]): string[];
        }>;
    };
}

export class PrimeFieldTester extends Contract {
    connect(signerOrProvider: Signer | Provider | string): PrimeFieldTester;
    attach(addressOrName: string): PrimeFieldTester;
    deployed(): Promise<PrimeFieldTester>;

    on(event: EventFilter | string, listener: Listener): PrimeFieldTester;
    once(event: EventFilter | string, listener: Listener): PrimeFieldTester;
    addListener(eventName: EventFilter | string, listener: Listener): PrimeFieldTester;
    removeAllListeners(eventName: EventFilter | string): PrimeFieldTester;
    removeListener(eventName: any, listener: Listener): PrimeFieldTester;

    interface: PrimeFieldTesterInterface;

    functions: {
        fadd_external(a: BigNumberish, b: BigNumberish): Promise<BigNumber>;

        fmul_external(a: BigNumberish, b: BigNumberish): Promise<BigNumber>;

        fpow_external(a: BigNumberish, b: BigNumberish, overrides?: TransactionOverrides): Promise<ContractTransaction>;

        inverse_external(a: BigNumberish, overrides?: TransactionOverrides): Promise<ContractTransaction>;
    };

    fadd_external(a: BigNumberish, b: BigNumberish): Promise<BigNumber>;

    fmul_external(a: BigNumberish, b: BigNumberish): Promise<BigNumber>;

    fpow_external(a: BigNumberish, b: BigNumberish, overrides?: TransactionOverrides): Promise<ContractTransaction>;

    inverse_external(a: BigNumberish, overrides?: TransactionOverrides): Promise<ContractTransaction>;

    filters: {
        log_bytes32(data: null): EventFilter;
    };

    estimate: {
        fadd_external(a: BigNumberish, b: BigNumberish): Promise<BigNumber>;

        fmul_external(a: BigNumberish, b: BigNumberish): Promise<BigNumber>;

        fpow_external(a: BigNumberish, b: BigNumberish): Promise<BigNumber>;

        inverse_external(a: BigNumberish): Promise<BigNumber>;
    };
}
