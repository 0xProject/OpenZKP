/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Contract, ContractTransaction, EventFilter, Signer} from 'ethers';
import {Listener, Provider} from 'ethers/providers';
import {Arrayish, BigNumber, BigNumberish, Interface} from 'ethers/utils';
import {TransactionOverrides, TypedEventDescription, TypedFunctionDescription} from '.';

interface FriTestingInterface extends Interface {
    functions: {
        fold_coset_external: TypedFunctionDescription<{
            encode([coset, eval_point, step, index, len, eval_x]: [
                BigNumberish[],
                BigNumberish,
                BigNumberish,
                BigNumberish,
                BigNumberish,
                {
                    eval_domain_generator: BigNumberish;
                    log_eval_domain_size: BigNumberish;
                    eval_domain_size: BigNumberish;
                },
            ]): string;
        }>;

        fri_layering_external: TypedFunctionDescription<{
            encode([proof, fri_layout, eval_points, log_eval_domain_size, queries, polynomial_at_queries]: [
                {
                    public_inputs: Arrayish;
                    trace_values: BigNumberish[];
                    trace_commitment: Arrayish;
                    constraint_values: BigNumberish[];
                    constraint_commitment: Arrayish;
                    trace_oods_values: BigNumberish[];
                    constraint_oods_values: BigNumberish[];
                    pow_nonce: Arrayish;
                    trace_decommitment: Arrayish[];
                    constraint_decommitment: Arrayish[];
                    fri_values: BigNumberish[][];
                    fri_commitments: Arrayish[];
                    fri_decommitments: Arrayish[][];
                    last_layer_coeffiencts: BigNumberish[];
                },
                BigNumberish[],
                BigNumberish[],
                BigNumberish,
                BigNumberish[],
                BigNumberish[],
            ]): string;
        }>;
    };

    events: {
        log_bytes32: TypedEventDescription<{
            encodeTopics([data]: [null]): string[];
        }>;
    };
}

export class FriTesting extends Contract {
    connect(signerOrProvider: Signer | Provider | string): FriTesting;
    attach(addressOrName: string): FriTesting;
    deployed(): Promise<FriTesting>;

    on(event: EventFilter | string, listener: Listener): FriTesting;
    once(event: EventFilter | string, listener: Listener): FriTesting;
    addListener(eventName: EventFilter | string, listener: Listener): FriTesting;
    removeAllListeners(eventName: EventFilter | string): FriTesting;
    removeListener(eventName: any, listener: Listener): FriTesting;

    interface: FriTestingInterface;

    functions: {
        fold_coset_external(
            coset: BigNumberish[],
            eval_point: BigNumberish,
            step: BigNumberish,
            index: BigNumberish,
            len: BigNumberish,
            eval_x: {
                eval_domain_generator: BigNumberish;
                log_eval_domain_size: BigNumberish;
                eval_domain_size: BigNumberish;
            },
            overrides?: TransactionOverrides,
        ): Promise<ContractTransaction>;

        fri_layering_external(
            proof: {
                public_inputs: Arrayish;
                trace_values: BigNumberish[];
                trace_commitment: Arrayish;
                constraint_values: BigNumberish[];
                constraint_commitment: Arrayish;
                trace_oods_values: BigNumberish[];
                constraint_oods_values: BigNumberish[];
                pow_nonce: Arrayish;
                trace_decommitment: Arrayish[];
                constraint_decommitment: Arrayish[];
                fri_values: BigNumberish[][];
                fri_commitments: Arrayish[];
                fri_decommitments: Arrayish[][];
                last_layer_coeffiencts: BigNumberish[];
            },
            fri_layout: BigNumberish[],
            eval_points: BigNumberish[],
            log_eval_domain_size: BigNumberish,
            queries: BigNumberish[],
            polynomial_at_queries: BigNumberish[],
            overrides?: TransactionOverrides,
        ): Promise<ContractTransaction>;
    };

    fold_coset_external(
        coset: BigNumberish[],
        eval_point: BigNumberish,
        step: BigNumberish,
        index: BigNumberish,
        len: BigNumberish,
        eval_x: {
            eval_domain_generator: BigNumberish;
            log_eval_domain_size: BigNumberish;
            eval_domain_size: BigNumberish;
        },
        overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    fri_layering_external(
        proof: {
            public_inputs: Arrayish;
            trace_values: BigNumberish[];
            trace_commitment: Arrayish;
            constraint_values: BigNumberish[];
            constraint_commitment: Arrayish;
            trace_oods_values: BigNumberish[];
            constraint_oods_values: BigNumberish[];
            pow_nonce: Arrayish;
            trace_decommitment: Arrayish[];
            constraint_decommitment: Arrayish[];
            fri_values: BigNumberish[][];
            fri_commitments: Arrayish[];
            fri_decommitments: Arrayish[][];
            last_layer_coeffiencts: BigNumberish[];
        },
        fri_layout: BigNumberish[],
        eval_points: BigNumberish[],
        log_eval_domain_size: BigNumberish,
        queries: BigNumberish[],
        polynomial_at_queries: BigNumberish[],
        overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    filters: {
        log_bytes32(data: null): EventFilter;
    };

    estimate: {
        fold_coset_external(
            coset: BigNumberish[],
            eval_point: BigNumberish,
            step: BigNumberish,
            index: BigNumberish,
            len: BigNumberish,
            eval_x: {
                eval_domain_generator: BigNumberish;
                log_eval_domain_size: BigNumberish;
                eval_domain_size: BigNumberish;
            },
        ): Promise<BigNumber>;

        fri_layering_external(
            proof: {
                public_inputs: Arrayish;
                trace_values: BigNumberish[];
                trace_commitment: Arrayish;
                constraint_values: BigNumberish[];
                constraint_commitment: Arrayish;
                trace_oods_values: BigNumberish[];
                constraint_oods_values: BigNumberish[];
                pow_nonce: Arrayish;
                trace_decommitment: Arrayish[];
                constraint_decommitment: Arrayish[];
                fri_values: BigNumberish[][];
                fri_commitments: Arrayish[];
                fri_decommitments: Arrayish[][];
                last_layer_coeffiencts: BigNumberish[];
            },
            fri_layout: BigNumberish[],
            eval_points: BigNumberish[],
            log_eval_domain_size: BigNumberish,
            queries: BigNumberish[],
            polynomial_at_queries: BigNumberish[],
        ): Promise<BigNumber>;
    };
}
