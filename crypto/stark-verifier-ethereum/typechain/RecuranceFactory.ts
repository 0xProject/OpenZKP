/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Contract, ContractFactory, Signer} from 'ethers';
import {Provider} from 'ethers/providers';
import {UnsignedTransaction} from 'ethers/utils/transaction';

import {TransactionOverrides} from '.';
import {Recurance} from './Recurance';

export class RecuranceFactory extends ContractFactory {
    constructor(signer?: Signer) {
        super(_abi, _bytecode, signer);
    }

    deploy(overrides?: TransactionOverrides): Promise<Recurance> {
        return super.deploy(overrides) as Promise<Recurance>;
    }
    getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
        return super.getDeployTransaction(overrides);
    }
    attach(address: string): Recurance {
        return super.attach(address) as Recurance;
    }
    connect(signer: Signer): RecuranceFactory {
        return super.connect(signer) as RecuranceFactory;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): Recurance {
        return new Contract(address, _abi, signerOrProvider) as Recurance;
    }
}

const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'bytes',
                        name: 'public_inputs',
                        type: 'bytes',
                    },
                    {
                        internalType: 'uint256[]',
                        name: 'trace_values',
                        type: 'uint256[]',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'trace_commitment',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint256[]',
                        name: 'constraint_values',
                        type: 'uint256[]',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'constraint_commitment',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint256[]',
                        name: 'trace_oods_values',
                        type: 'uint256[]',
                    },
                    {
                        internalType: 'uint256[]',
                        name: 'constraint_oods_values',
                        type: 'uint256[]',
                    },
                    {
                        internalType: 'bytes8',
                        name: 'pow_nonce',
                        type: 'bytes8',
                    },
                    {
                        internalType: 'bytes32[]',
                        name: 'trace_decommitment',
                        type: 'bytes32[]',
                    },
                    {
                        internalType: 'bytes32[]',
                        name: 'constraint_decommitment',
                        type: 'bytes32[]',
                    },
                    {
                        internalType: 'uint256[][]',
                        name: 'fri_values',
                        type: 'uint256[][]',
                    },
                    {
                        internalType: 'bytes32[]',
                        name: 'fri_commitments',
                        type: 'bytes32[]',
                    },
                    {
                        internalType: 'bytes32[][]',
                        name: 'fri_decommitments',
                        type: 'bytes32[][]',
                    },
                    {
                        internalType: 'uint256[]',
                        name: 'last_layer_coeffiencts',
                        type: 'uint256[]',
                    },
                ],
                internalType: 'struct ProofTypes.StarkProof',
                name: 'proof',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'uint8',
                        name: 'number_of_columns',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'log_trace_length',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint64',
                        name: 'number_of_constraints',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint8',
                        name: 'log_blowup',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'constraint_degree',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'pow_bits',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'number_of_queries',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8[]',
                        name: 'fri_layout',
                        type: 'uint8[]',
                    },
                ],
                internalType: 'struct ProofTypes.ProofParameters',
                name: 'params',
                type: 'tuple',
            },
            {
                internalType: 'uint64[]',
                name: 'queries',
                type: 'uint64[]',
            },
            {
                internalType: 'uint256',
                name: 'oods_point',
                type: 'uint256',
            },
            {
                internalType: 'uint256[]',
                name: 'constraint_coeffiencts',
                type: 'uint256[]',
            },
            {
                internalType: 'uint256[]',
                name: 'oods_coeffiencts',
                type: 'uint256[]',
            },
        ],
        name: 'constraint_calculations',
        outputs: [
            {
                internalType: 'uint256[]',
                name: '',
                type: 'uint256[]',
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'public_input',
                type: 'bytes',
            },
        ],
        name: 'initalize_system',
        outputs: [
            {
                components: [
                    {
                        internalType: 'uint8',
                        name: 'number_of_columns',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'log_trace_length',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint64',
                        name: 'number_of_constraints',
                        type: 'uint64',
                    },
                    {
                        internalType: 'uint8',
                        name: 'log_blowup',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'constraint_degree',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'pow_bits',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8',
                        name: 'number_of_queries',
                        type: 'uint8',
                    },
                    {
                        internalType: 'uint8[]',
                        name: 'fri_layout',
                        type: 'uint8[]',
                    },
                ],
                internalType: 'struct ProofTypes.ProofParameters',
                name: '',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'bytes32',
                        name: 'digest',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'uint64',
                        name: 'counter',
                        type: 'uint64',
                    },
                ],
                internalType: 'struct PublicCoin.Coin',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
];

const _bytecode =
    '0x60806040526000805460ff1916600817905534801561001d57600080fd5b506112dd8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063cdb7ef431461003b578063f837656b14610065575b600080fd5b61004e610049366004610f62565b610086565b60405161005c929190611113565b60405180910390f35b610078610073366004610e9e565b61027f565b60405161005c929190611192565b60606000610092610d69565b6040805160a08101909152806100ab60208f018f61123e565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506020016100ef60608f018f61123e565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060200161013360a08f018f61123e565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060200161017760c08f018f61123e565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506020908101906101c19060408f01908f0161104a565b60ff168152509050606061024c82878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508d8d808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508f9250610378915050565b9d7f01e94b626dcff9d77c33c75b33d8457ba91534da30442d41d717a06e3f65211d9d509b505050505050505050505050565b610287610d9b565b61028f610de1565b610297610de1565b6102a384860186610f08565b90506102ad610de1565b604080518082019091526020830151835182916102cf916002606085016110d6565b604051602081830303815290604052805190602001208152602001600067ffffffffffffffff168152509050600061030a8360200151610553565b6001019050606061031a82610659565b9050610324610d9b565b506040805161010081018252600280825260ff949094166020820152600491810182905260608101919091526080810192909252600a60a0830152601460c083015260e082015293509150505b9250929050565b6060610382610df8565b6103a161039c858589608001516004018a60800151610760565b610a1a565b9050606084516040519080825280602002602001820160405280156103d0578160200160208202803683370190505b5090506103db610df8565b6103e487610a1a565b905060005b865181101561054657604089015151600090815b818110156104975760006104358a8e6000015184868902018151811061041f57fe5b6020026020010151610a3190919063ffffffff16565b9050600061044289610a80565b90506000610456838363ffffffff610aaa16565b905060006104736104668a610a80565b839063ffffffff610ad716565b9050610485878263ffffffff610b1216565b965050600190930192506103fd915050565b5060006104a387610a80565b60608d0151519250905060005b8c606001515181101561051e5760006104d78b8f6020015184878a02018151811061041f57fe5b905060006104eb828563ffffffff610ad716565b905060006104fb6104668a610a80565b905061050d878263ffffffff610b1216565b965050600190920191506104b09050565b508286858151811061052c57fe5b6020908102919091010152505060008352506001016103e9565b5090979650505050505050565b60008064010000000067ffffffffffffffff84161061057a5763ffffffff602093841c1692015b620100008367ffffffffffffffff161061059e5765ffffffffffff601093841c1692015b6101008367ffffffffffffffff16106105c25766ffffffffffffff600893841c1692015b60108367ffffffffffffffff16106105e657670fffffffffffffff600493841c1692015b60048367ffffffffffffffff161061060a57673fffffffffffffff600293841c1692015b60028367ffffffffffffffff161061062e57677fffffffffffffff600193841c1692015b919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01919050565b600080546060919060ff9081169084161115610680575060005460ff908116830316610686565b5060ff82165b606060038206156106f157600382046001016040519080825280602002602001820160405280156106c1578160200160208202803683370190505b50905060038206816001835103815181106106d857fe5b602002602001019060ff16908160ff1681525050610722565b6003820460405190808252806020026020018201604052801561071e578160200160208202803683370190505b5090505b60005b6003830481101561075857600382828151811061073e57fe5b60ff90921660209283029190910190910152600101610725565b509392505050565b606061076a610e12565b61077384610b3f565b805190915060009061079190600160ff87161b63ffffffff610b8216565b9050606087516003026040519080825280602002602001820160405280156107c3578160200160208202803683370190505b50905060005b88518110156108ce576000610825600361081961080c8b8e87815181106107ec57fe5b602002602001015167ffffffffffffffff16610baf90919063ffffffff16565b889063ffffffff610bf716565b9063ffffffff610aaa16565b905061084861083b8a600163ffffffff610aaa16565b829063ffffffff610a3116565b83836003026000018151811061085a57fe5b602090810291909101015261087861083b8a8663ffffffff610aaa16565b83836003026001018151811061088a57fe5b60209081029190910101526108a861083b8a8063ffffffff610aaa16565b8383600302600201815181106108ba57fe5b6020908102919091010152506001016107c9565b50606081516040519080825280602002602001820160405280156108fc578160200160208202803683370190505b509050600160005b83518110156109555761093384828151811061091c57fe5b602002602001015183610aaa90919063ffffffff16565b91508183828151811061094257fe5b6020908102919091010152600101610904565b50600061096182610c07565b83519091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff015b80156109f1576109a185600183038151811061091c57fe5b8482815181106109ad57fe5b6020026020010181815250506109c885828151811061091c57fe5b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610989565b508083600081518110610a0057fe5b602090810291909101015250909998505050505050505050565b610a22610df8565b60208101919091526000815290565b60007f0800000000000011000000000000000000000000000000000000000000000001827f08000000000000110000000000000000000000000000000000000000000000010384089392505050565b805160018101825260208201518051600092908110610a9b57fe5b60200260200101519050919050565b60007f08000000000000110000000000000000000000000000000000000000000000018284099392505050565b6000610b0b610ae68484610aaa565b7e40000000000001100000000000012100000000000000000000000000000000610aaa565b9392505050565b60007f08000000000000110000000000000000000000000000000000000000000000018284089392505050565b610b47610e12565b6040518060600160405280610b5b84610c5a565b815260ff84166020820181905260020a67ffffffffffffffff166040909101529050919050565b6000610b0b83837f0800000000000011000000000000000000000000000000000000000000000001610d21565b60008281805b8460ff168160ff161015610be457600291820260018416179167ffffffffffffffff8416049250600101610bb5565b5067ffffffffffffffff16949350505050565b6000610b0b836000015183610b82565b6000610c54827f0800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff7f0800000000000011000000000000000000000000000000000000000000000001610d21565b92915050565b60008060ff831660020a7f080000000000001100000000000000000000000000000000000000000000000081610c8c57fe5b04905060ff831660020a81027f080000000000001100000000000000000000000000000000000000000000000014610cf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf09061115b565b60405180910390fd5b610b0b6003827f08000000000000110000000000000000000000000000000000000000000000015b600060405160208152602080820152602060408201528460608201528360808201528260a082015260208160c08360006005600019f1610d6057600080fd5b51949350505050565b6040518060a0016040528060608152602001606081526020016060815260200160608152602001600060ff1681525090565b604080516101008101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c082019290925260e081019190915290565b604080518082019091526000808252602082015290565b604051806040016040528060008152602001606081525090565b604080516060810182526000808252602082018190529181019190915290565b60008083601f840112610e43578182fd5b50813567ffffffffffffffff811115610e5a578182fd5b602083019150836020808302850101111561037157600080fd5b60006101008284031215610e86578081fd5b50919050565b60006101c08284031215610e86578081fd5b60008060208385031215610eb0578182fd5b823567ffffffffffffffff80821115610ec7578384fd5b81850186601f820112610ed8578485fd5b8035925081831115610ee8578485fd5b866020848301011115610ef9578485fd5b60200196919550909350505050565b600060408284031215610f19578081fd5b6040516040810167ffffffffffffffff8282108183111715610f39578384fd5b8160405284358352602085013591508082168214610f55578384fd5b5060208201529392505050565b600080600080600080600080600060c08a8c031215610f7f578485fd5b893567ffffffffffffffff80821115610f96578687fd5b610fa28d838e01610e8c565b9a5060208c0135915080821115610fb7578687fd5b610fc38d838e01610e74565b995060408c0135915080821115610fd8578687fd5b610fe48d838e01610e32565b909950975060608c0135965060808c0135915080821115611003578586fd5b61100f8d838e01610e32565b909650945060a08c0135915080821115611027578384fd5b506110348c828d01610e32565b8194508093505050509295985092959850929598565b60006020828403121561105b578081fd5b813560ff81168114610b0b578182fd5b6000815180845260208085019450808401835b8381101561109d57815160ff168752958201959082019060010161107e565b509495945050505050565b8051825260209081015167ffffffffffffffff16910152565b67ffffffffffffffff169052565b60ff169052565b60c09390931b7fffffffffffffffff0000000000000000000000000000000000000000000000001683526008830191909152602882015260480190565b604080825283519082018190526000906020906060840190828701845b8281101561114c57815184529284019290840190600101611130565b50505092019290925292915050565b60208082526010908201527f526f6f7420756e617661696c61626c6500000000000000000000000000000000604082015260600190565b60006060825260ff845116606083015260ff602085015116608083015260408401516111c160a08401826110c1565b5060608401516111d460c08401826110cf565b5060808401516111e760e08401826110cf565b5060a08401516101006111fc818501836110cf565b60c086015191506112116101208501836110cf565b60e08601519150806101408501525061122e61016084018261106b565b915050610b0b60208301846110a8565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611272578283fd5b8084018035925067ffffffffffffffff83111561128d578384fd5b602081019350505060208102360382131561037157600080fdfea2646970667358221220a7d60d810c75280c7ef832e9a78db6405f49c52174241725c395c95b2c9a51e564736f6c63430006040033';
