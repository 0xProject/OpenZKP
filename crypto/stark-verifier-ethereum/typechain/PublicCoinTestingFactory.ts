/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { PublicCoinTesting } from "./PublicCoinTesting";

export class PublicCoinTestingFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<PublicCoinTesting> {
    return super.deploy(overrides) as Promise<PublicCoinTesting>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): PublicCoinTesting {
    return super.attach(address) as PublicCoinTesting;
  }
  connect(signer: Signer): PublicCoinTestingFactory {
    return super.connect(signer) as PublicCoinTestingFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PublicCoinTesting {
    return new Contract(address, _abi, signerOrProvider) as PublicCoinTesting;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "data",
        type: "bytes32"
      }
    ],
    name: "log_bytes32",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "starting_data",
        type: "bytes"
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256"
      }
    ],
    name: "init_and_read",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "starting_data",
        type: "bytes"
      },
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32"
      }
    ],
    name: "init_and_write",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061035e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ed19e53e1461003b578063f6ed3de5146100ad575b600080fd5b6100ab6004803603604081101561005157600080fd5b81019060208101813564010000000081111561006c57600080fd5b82018360208201111561007e57600080fd5b803590602001918460018302840111640100000000831117156100a057600080fd5b91935091503561011d565b005b6100ab600480360360408110156100c357600080fd5b8101906020810181356401000000008111156100de57600080fd5b8201836020820111156100f057600080fd5b8035906020019184600183028401116401000000008311171561011257600080fd5b9193509150356101b0565b610125610311565b61016484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061025692505050565b9050610176818363ffffffff61027c16565b805160408051918252517fe81699b85113eea1c73e10588b2b035e55893369632173afd43feb192fac64e39181900360200190a150505050565b6101b8610311565b6101f784848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061025692505050565b905060005b8281101561024f57600061020f8361029a565b6040805182815290519192507fe81699b85113eea1c73e10588b2b035e55893369632173afd43feb192fac64e3919081900360200190a1506001016101fc565b5050505050565b61025e610311565b6000610269836102da565b9050610273610311565b90815292915050565b600061028c8360000151836102e5565b600060208501529092525050565b6000806102bc8360000151846020015167ffffffffffffffff1660001b6102e5565b602093909301805160010167ffffffffffffffff1690525090919050565b805160209091012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b60408051808201909152600080825260208201529056fea264697066735822122096444fbacb93924067d31029af785683eb25d280515fbab771dbfca445a117dc64736f6c63430006060033";
