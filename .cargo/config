[alias]
# TODO: Test all features
t = "test --all-targets"
b = "build --all-targets"
d = "hack rustdoc -- --html-in-header .cargo/katex-header.html"
lint = "clippy --all-targets -- -D warnings"
cfix = "clippy -Z unstable-options --fix --all-targets"
perf = "bench --bench benchmark"
nostd = """
    hack check
    --lib
    --bins
    --no-default-features
    --no-dev-deps
    --target=thumbv7m-none-eabi
    """
nostd_all = """
    nostd --workspace
    --exclude zkp-criterion-utils
    --exclude zkp-macros-lib
    --exclude zkp-macros-impl
    --exclude zkp-macros-decl
    --exclude zkp-logging-allocator
    """
perf_all = """
    perf --workspace
    --exclude zkp-macros-lib
    --exclude zkp-macros-impl
    --exclude zkp-macros-decl
    --exclude zkp-criterion-utils
    --exclude zkp-error-utils
    --exclude zkp-logging-allocator
    --exclude zkp-mmap-vec
    --exclude zkp-hash
    """

[build]
# TODO: This does not seem to work. Instead, we need to manually set
# export RUSTDOCFLAGS="--html-in-header $(pwd)/.cargo/katex-header.html"
rustdocflags = [ "--html-in-header", ".cargo/katex-header.html" ]

# Build for the current CPU by default
[target.'cfg(target_arch = "x86_64")']
rustflags = [ "-C", "target-cpu=native" ]

# Cross compile to Linux
[target.x86_64-unknown-linux-musl]
linker = "x86_64-linux-musl-gcc"
ar = "x86_64-linux-musl-ar"
