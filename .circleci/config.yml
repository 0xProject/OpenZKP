version: 2
jobs:
  build:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - restore_cache:
          key: project-cache
      - run:
          name: Version information
          command: |
            rustc --version
            cargo --version
            rustup --version
      - run:
          name: Setup build environment
          command: |
            sudo apt-get update
            sudo apt-get install jq
            rustup component add rustfmt clippy
            rustup toolchain install nightly-2019-07-31
            rustup component add rustfmt --toolchain nightly-2019-07-31
          no_output_timeout: 1800s
      - run:
          name: Clean build
          command: |
            # Clean workspace projects  but not dependencies.
            WORKSPACE=$(cargo metadata --format-version 1 | jq --raw-output '.workspace_members[] | match("^(\\w.+)\\ \\d";"g") | .captures[0].string')
            echo "Workspace projects: " $WORKSPACE
            for MEMBER in $WORKSPACE; do cargo clean -p $MEMBER; done
      - run:
          name: Linting
          command: |
            RUSTFLAGS="-Dwarnings" cargo +nightly-2019-07-31 fmt --all -- --check
            RUSTFLAGS="-Dwarnings" cargo clippy --all --all-targets
      - run:
          name: Build all targets
          command: RUST_BACKTRACE=1 RUSTFLAGS="-Dwarnings" cargo build --all --all-targets
      - run:
          name: Test in debug and release mode
          command: |
            RUST_BACKTRACE=1 cargo test --all -- --nocapture
            RUST_BACKTRACE=1 cargo test --release -- --nocapture
      - run:
          name: Run benchmarks as tests
          command: |
            # Actually running the benchmarks on CI is too noisy. The results
            # would be meaningless. Instead we just run it to make sure they work.
            RUST_BACKTRACE=1 cargo bench --bench benchmark -- --test
      # TODO: Coverage
      - save_cache:
          key: project-cache
          paths:
            - "~/.cargo"
            - "./target"
workflows:
  version: 2
  build:
    jobs:
      - build
